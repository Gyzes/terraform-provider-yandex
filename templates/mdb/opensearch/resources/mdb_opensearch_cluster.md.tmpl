---
subcategory: "{{.SubCategory}}"
page_title: "Yandex: {{.Name}}"
description: |-
  Manages a OpenSearch cluster within Yandex.Cloud.
---


# {{.Name}}

{{ .Description }}


Manages a OpenSearch cluster within the Yandex.Cloud. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-opensearch/concepts).

## Example usage

{{tffile "examples/mdb/opensearch/resources/mdb_opensearch_cluster_example_1.tf"}}

Example of creating a high available OpenSearch Cluster.

{{tffile "examples/mdb/opensearch/resources/mdb_opensearch_cluster_example_2.tf"}}

## Argument Reference

The following arguments are supported:

* `name` - (Required) Name of the OpenSearch cluster. Provided by the client when the cluster is created.

* `network_id` - (Required) ID of the network, to which the OpenSearch cluster belongs. It is not possible to change this value after cluster creation.

* `config` - (Required) Configuration of the OpenSearch cluster. The structure is documented below.

---

* `environment` - (Optional) Deployment environment of the OpenSearch cluster. Can be either `PRESTABLE` or `PRODUCTION`. Default: `PRODUCTION`. It is not possible to change this value after cluster creation.

* `description` - (Optional) Description of the OpenSearch cluster.

* `folder_id` - (Optional) The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.

* `labels` - (Optional) A set of key/value label pairs to assign to the OpenSearch cluster.

* `security_group_ids` - (Optional) A set of ids of security groups assigned to hosts of the cluster.

* `service_account_id` - (Optional) ID of the service account authorized for this cluster.

* `deletion_protection` - (Optional) Inhibits deletion of the cluster. Can be either `true` or `false`.

* `auth_settings` - (Optional) Authorization settings for Dashboards. The structure is documented below.

---

The `config` block supports:

* `version` - (Optional) Version of OpenSearch.

* `admin_password` - (Required) Password for admin user of OpenSearch.

* `opensearch` - (Required) Configuration for OpenSearch node groups. The structure is documented below.

* `dashboards` - (Optional) Configuration for Dashboards node groups. The structure is documented below.

The `opensearch` block supports:

* `plugins` - (Optional) A set of requested OpenSearch plugins.

* `node_groups` - (Required) A set of named OpenSearch node group configurations. The structure is documented below.

The OpenSearch `node_groups` block supports:

* `name` - (Required) Name of OpenSearch node group.

* `resources` - (Required) Resources allocated to hosts of this OpenSearch node group. The structure is documented below.

* `host_count` - (Required) Number of hosts in this node group.

* `zones_ids` - (Required) A set of availability zones where hosts of node group may be allocated.

* `subnet_ids` - (Optional) A set of the subnets, to which the hosts belongs. The subnets must be a part of the network to which the cluster belongs.

* `assign_public_ip` - (Optional) Sets whether the hosts should get a public IP address.

* `roles` - (Optional) A set of OpenSearch roles assigned to hosts. Available roles are: `DATA`, `MANAGER`. Default: [`DATA`, `MANAGER`]

The Dashboards `node_groups` block supports:

* `name` - (Required) Name of OpenSearch node group.

* `resources` - (Required) Resources allocated to hosts of this Dashboards node group. The structure is documented below.

* `host_count` - (Required) Number of hosts in this node group.

* `zones_ids` - (Required) A set of availability zones where hosts of node group may be allocated.

* `subnet_ids` - (Optional) A set of the subnets, to which the hosts belongs. The subnets must be a part of the network to which the cluster belongs.

* `assign_public_ip` - (Optional) Sets whether the hosts should get a public IP address.

The `resources` block supports:

* `resources_preset_id` - (Required) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-opensearch/concepts).

* `disk_size` - (Required) Volume of the storage available to a host, in bytes.

* `disk_type_id` - (Required) Type of the storage of OpenSearch hosts.

The `maintenance_window` block supports:

* `type` - (Required) Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
* `hour` - (Optional) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
* `day` - (Optional) Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.

The `auth_settings` block supports:

* `saml` - (Optional) SAML auth option. The structure is documented below.

The `saml` block supports:

* `enabled` - (Required) Enables SAML auth.

* `idp_entity_id` - (Required) ID of the SAML Identity Provider.

* `idp_metadata_file_content` - (Required) Metadata file content of the SAML Identity Provider. You can either put file content manually or use [`file` function](https://developer.hashicorp.com/terraform/language/functions/file)

* `sp_entity_id` - (Required) Service provider entity ID.

* `dashboards_url` - (Required) Dashboards URL.

* `roles_key` - (Optional) Roles key.

* `subject_key` - (Optional) Subject key.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `created_at` - Creation timestamp of the key.

* `health` - Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see `health` field of JSON representation in [the official documentation](https://cloud.yandex.com/docs/managed-opensearch/api-ref/Cluster/).

* `status` - Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official documentation](https://cloud.yandex.com/docs/managed-opensearch/api-ref/Cluster/).

* `hosts` - A hosts of the OpenSearch cluster. The structure is documented below.

The `hosts` block supports:

* `fqdn` - The fully qualified domain name of the host.

* `zone` - The availability zone where the OpenSearch host will be created. For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).

* `type` - The type of the deployed host. Can be either `OPENSEARCH` or `DASHBOARDS`.

* `roles` - The roles of the deployed host. Can contain `DATA` and/or `MANAGER` roles. Will be empty for `DASHBOARDS` type.

* `subnet_id` - The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.

* `assign_public_ip` - Sets whether the host should get a public IP address. Can be either `true` or `false`.

* `node_group` - Name of the node group.

## Import

A cluster can be imported using the `id` of the resource, e.g.

```
$ terraform import yandex_mdb_opensearch_cluster.foo cluster_id
```
